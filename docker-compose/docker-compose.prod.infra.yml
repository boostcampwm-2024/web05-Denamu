services:
  # DB 서비스
  mysql-db:
    image: "mysql:8.0.39"
    ports:
      - "3306:3306"
    volumes:
      - denamu-mysql:/var/lib/mysql
    networks:
      - Denamu
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    environment:
      MYSQL_ROOT_HOST: localhost
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: "Asia/Seoul"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$MYSQL_PASSWORD",
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  # MySQL Metrics
  mysql_metrics:
    image: prom/mysqld-exporter
    ports:
      - "9104:9104"
    networks:
      - Denamu
    command:
      - "--mysqld.username=$MYSQL_USER:$MYSQL_PASSWORD"
      - "--mysqld.address=mysql-db:3306"
    environment:
      TZ: "Asia/Seoul"
    depends_on:
      - mysql-db

  # Redis 서비스
  redis:
    image: "redis:6.0.16-alpine"
    ports:
      - "6379:6379"
    volumes:
      - denamu-redis:/data
    networks:
      - Denamu
    entrypoint:
      [
        "sh",
        "-c",
        "redis-server & sleep 5 && echo 'ACL SETUSER ${REDIS_USER} on >${REDIS_PASSWORD} allkeys allcommands' | redis-cli && tail -f /dev/null",
      ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      TZ: "Asia/Seoul"

  # Redis Metrics
  redis_metrics:
    image: oliver006/redis_exporter
    ports:
      - "9121:9121"
    networks:
      - Denamu
    environment:
      REDIS_ADDR: "redis://redis:6379"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      TZ: "Asia/Seoul"
    depends_on:
      - redis

  # Prometheus
  prometheus:
    image: "prom/prometheus"
    ports:
      - "9090:9090"
    networks:
      - Denamu
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - denamu-prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    environment:
      TZ: "Asia/Seoul"

  # Grafana:
  grafana:
    image: "grafana/grafana"
    ports:
      - "3000:3000"
    networks:
      - Denamu
    volumes:
      - denamu-grafana:/var/lib/grafana
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/denamu-logs-dashboard.json:/etc/grafana/provisioning/dashboards/denamu-logs-dashboard.json
    depends_on:
      - prometheus
      - loki
    environment:
      TZ: "Asia/Seoul"
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/denamu-logs-dashboard.json

  # Node Exporter
  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - Denamu
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    environment:
      TZ: "Asia/Seoul"

  # Loki - 로그 수집 및 저장소
  loki:
    image: grafana/loki:2.9.3
    ports:
      - "3100:3100"
    networks:
      - Denamu
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - denamu-loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      TZ: "Asia/Seoul"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Promtail - 로그 수집 에이전트
  promtail:
    image: grafana/promtail:2.9.3
    networks:
      - Denamu
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/prod_data/logs/server:/var/log/server:ro
      - /var/prod_data/logs/feed-crawler:/var/log/feed-crawler:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    environment:
      TZ: "Asia/Seoul"

volumes:
  denamu-mysql:
  denamu-redis:
  denamu-prometheus:
  denamu-grafana:
  denamu-loki:

networks:
  Denamu:
    driver: bridge
